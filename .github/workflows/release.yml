# Code generated by dhall-to-yaml.  DO NOT EDIT.
jobs:
  buildJar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: "actions/checkout@v2"
      - name: Set up Java
        uses: "actions/setup-java@v1"
        with:
          java-version: '11'
      - name: Coursier Cache
        uses: "coursier/cache-action@v3"
        with:
          root: sterlang
      - name: assembly sterlang.jar
        run: "cd sterlang; sbt assembly"
      - name: upload sterlang.jar
        uses: "actions/upload-artifact@v2"
        with:
          name: sterlang.jar
          path: sterlang/target/scala-2.13/sterlang.jar
          retention-days: '8'
  sterlangLinuxUpload:
    needs:
      - buildJar
    runs-on: ubuntu-latest
    steps:
      - name: Set up Java
        uses: "actions/setup-java@v1"
        with:
          java-version: '11'
      - name: Setup GraalVM Environment
        uses: "DeLaGuardo/setup-graalvm@master"
        with:
          graalvm-version: "20.2.0.java11"
      - name: Install Native Image Plugin
        run: gu install native-image
      - name: Get JAR Artifact
        uses: "actions/download-artifact@v2"
        with:
          name: sterlang.jar
      - name: ls
        run: ls -lah
      - name: "Build native image 'sterlang-linux'"
        run: native-image -R:MaxHeapSize=16m --no-server --no-fallback -jar sterlang.jar sterlang-linux
      - name: stat sterlang-linux
        run: stat sterlang-linux
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        id: get_release_url
        name: Get release url
        uses: "bruceadams/get-release@v1.2.2"
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        name: upload release binary sterlang-linux
        uses: "actions/upload-release-asset@v1.0.2"
        with:
          asset_content_type: application/octet-stream
          asset_name: sterlang-linux
          asset_path: sterlang-linux
          upload_url: "${{ steps.get_release_url.outputs.upload_url }}"
  sterlangMacUpload:
    needs:
      - buildJar
    runs-on: macos-latest
    steps:
      - name: Set up Java
        uses: "actions/setup-java@v1"
        with:
          java-version: '11'
      - name: Setup GraalVM Environment
        uses: "DeLaGuardo/setup-graalvm@master"
        with:
          graalvm-version: "20.2.0.java11"
      - name: Install Native Image Plugin
        run: gu install native-image
      - name: Get JAR Artifact
        uses: "actions/download-artifact@v2"
        with:
          name: sterlang.jar
      - name: ls
        run: ls -lah
      - name: "Build native image 'sterlang-mac'"
        run: native-image -R:MaxHeapSize=16m --no-server --no-fallback -jar sterlang.jar sterlang-mac
      - name: stat sterlang-mac
        run: stat sterlang-mac
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        id: get_release_url
        name: Get release url
        uses: "bruceadams/get-release@v1.2.2"
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        name: upload release binary sterlang-mac
        uses: "actions/upload-release-asset@v1.0.2"
        with:
          asset_content_type: application/octet-stream
          asset_name: sterlang-mac
          asset_path: sterlang-mac
          upload_url: "${{ steps.get_release_url.outputs.upload_url }}"
  uploadErltcBinary:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: "actions/checkout@v2"
      - name: Erlang version
        run: "erl -eval 'erlang:display(erlang:system_info(otp_release)), halt().'  -noshell"
      - name: escriptize
        run: rebar3 escriptize
      - name: "prevent conflict between 'erltc' file and directory"
        run: "rm -rf 'erltc'"
      - name: mv escript
        run: "mv ./_build/default/bin/erltc 'erltc'"
      - name: stat erltc
        run: stat erltc
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        id: get_release_url
        name: Get release url
        uses: "bruceadams/get-release@v1.2.2"
      - env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        name: upload release binary erltc
        uses: "actions/upload-release-asset@v1.0.2"
        with:
          asset_content_type: application/octet-stream
          asset_name: erltc
          asset_path: erltc
          upload_url: "${{ steps.get_release_url.outputs.upload_url }}"
name: Upload release binary
on:
  release:
    types:
      - created
