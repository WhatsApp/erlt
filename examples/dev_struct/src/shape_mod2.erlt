%% Copyright (c) Facebook, Inc. and its affiliates.
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%%     http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.

-module(shape_mod2).

-export([
         shape_var_unused_f/2,
         shape_var_used_f/2,
         misc/5
]).

-export_type([
    shape_var_unused_o/2,
    shape_var_used_o/2,
    shape_var_unused_s/3,
    shape_var_used_s/2,
    shape_var_unused_e/2,
    shape_var_used_e/2,
    conflict/2
]).

-opaque shape_var_unused_o(A, R) :: #(id :: A, R).

-opaque shape_var_used_o(A, R) :: {A, #(id :: A, R)}.

-spec shape_var_unused_f(A, R) -> #(id :: A, R).

shape_var_unused_f(A, R) ->
    R#(id = A).

-spec shape_var_used_f(A, R) -> {R, #(id :: A, R)}.

shape_var_used_f(A, R) ->
    {R, R#(id = A)}.

-enum shape_var_unused_e(A, R) :: (shape{#(id :: A, R)}).

-enum shape_var_used_e(A, R) :: (shape{#(id :: A, R)}, var{R}).

-struct shape_var_unused_s(A1, A2, R) :: (a = 5 :: A1, b :: #(id :: A2, R)).

-struct shape_var_used_s(A, R) :: (a :: R, b :: #(id :: A, R)).

-spec misc(A1, R1, A2, R2, R3) -> {R1, #(id :: A1, R1), R2, #(id :: A2, R2), #(id:: A2, R3)}.

misc(A1, R1, A2, R2, R3) ->
    {R1, R1#(id = 1), R2, R2#(id = 2), R3#(id = 3)}.

-type conflict(__ERLT_SHAPE_VAR_A, A) :: #(id :: __ERLT_SHAPE_VAR_A, A).
