%% Copyright (c) Facebook, Inc. and its affiliates.
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%%     http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.

-module(binaries).
-export([test1/1, test2/1, test3/1, test4/1, test5/2]).

% Binary patterns are ignored for exhaustiveness.
-spec test1(binary()) -> {}.
test1(<<0, _/binary>>) -> {}.

% They don't generate false redundancy warnings.
-spec test2(binary()) -> {}.
test2(<<0, _/binary>>) -> {};
test2(<<1, _/binary>>) -> {}.

% They don't generate false redundancy warnings with wildcards.
-spec test3(binary()) -> {}.
test3(<<0, _/binary>>) -> {};
test3(_) -> {}.

% They don't generate true redundancy warnings either.
-spec test4(binary()) -> {}.
test4(<<0, _/binary>>) -> {};
test4(<<0, _/binary>>) -> {}.

% They play well with other patterns.
-spec test5(boolean(), binary()) -> {}.
test5(true, <<0, _/binary>>) -> {};
test5(false, <<0, _/binary>>) -> {}.
