val with_default/2: fun((B, result(A, B)) -> B)
val _Def: B
val A: B
val Def: B
val _E: A
val with_default/1: fun((C) -> fun((result(D, C)) -> C))
val Def: C
val Res: result(D, C)
val map/2: fun((fun((F) -> G), result(E, F)) -> result(E, G))
val Func: fun((F) -> G)
val A: F
val _Func: fun((F) -> G)
val E: E
val map/1: fun((fun((H) -> J)) -> fun((result(I, H)) -> result(I, J)))
val Func: fun((H) -> J)
val Res: result(I, H)
val map2/3: fun((fun((L, M) -> N), result(K, L), result(K, M)) -> result(K, N))
val _Func: fun((L, M) -> N)
val X: K
val _Func: fun((L, M) -> N)
val X: K
val Func: fun((L, M) -> N)
val A: L
val B: M
val map2/1: fun((fun((O, P) -> R)) -> fun((result(Q, O), result(Q, P)) -> result(Q, R)))
val Func: fun((O, P) -> R)
val ResA: result(Q, O)
val ResB: result(Q, P)
val and_then/2: fun((fun((T) -> result(S, U)), result(S, T)) -> result(S, U))
val Callback: fun((T) -> result(S, U))
val Value: T
val _Callback: fun((T) -> result(S, U))
val Msg: S
val and_then/1: fun((fun((V) -> result(W, X))) -> fun((result(W, V)) -> result(W, X)))
val Callback: fun((V) -> result(W, X))
val Res: result(W, V)
val map_error/2: fun((fun((Z) -> T_26), result(Z, Y)) -> result(T_26, Y))
val _F: fun((Z) -> T_26)
val V: Y
val F: fun((Z) -> T_26)
val E: Z
val map_error/1: fun((fun((T_27) -> T_28)) -> fun((result(T_27, T_29)) -> result(T_28, T_29)))
val F: fun((T_27) -> T_28)
val Res: result(T_27, T_29)
val to_maybe/1: fun((result(T_30, T_31)) -> maybe:maybe(T_31))
val V: T_31
val from_maybe/2: fun((T_32, maybe:maybe(T_33)) -> result(T_32, T_33))
val _Err: T_32
val V: T_33
val Err: T_32
val from_maybe/1: fun((T_34) -> fun((maybe:maybe(T_35)) -> result(T_34, T_35)))
val Err: T_34
val Maybe: maybe:maybe(T_35)
val is_ok/1: fun((result(T_36, T_37)) -> boolean())
