-spec minimal() -> {}.
-spec basic_values() -> {}.
-spec enums() -> {}.
-spec id(A) -> A.
-spec mkSome(A) -> core:option(A).
-spec mkList(A, A) -> list(A).
-spec funs() -> {}.
-spec pieces() -> {}.
-spec list1(list(A)) -> list(A).
-spec list2(list(A)) -> list(B).
-spec list3(list(A)) -> {A, list(A)}.
-spec list4(list(A)) -> {A, A, A}.
-spec map(fun((A) -> B), list(A)) -> list(B).
-spec getIds(list(#( id :: A, B ))) -> list(A).
-spec global(boolean(), A) -> A.
-spec inside(A) -> A.
-spec inside1() -> fun((A) -> A).
-spec inside2() -> fun((A) -> A).
-spec get_id(#( id :: A, B )) -> A.
-spec extract(#( id :: A, B )) -> #( id :: A ).
-spec records_example() -> {}.
-spec id_rec(#( A )) -> #( A ).
-spec get_id1(#( id :: A, B )) -> A.
-spec update_a_b(#( a :: number(), b :: number(), A )) -> #( a :: number(), b :: number(), A ).
-spec swap_a_b(#( a :: A, b :: A, B )) -> #( a :: A, b :: A, B ).
-spec id01(A) -> A.
-spec id02(A) -> A.
-spec id03(A) -> A.
-spec isDefined1(my_option(A)) -> boolean().
-spec map1(fun((A) -> B), my_list(A)) -> my_list(B).
-spec to_bools(my_list(my_option(A))) -> my_list(boolean()).
-spec onlySome(my_list(my_option(A))) -> my_list(my_option(A)).
-spec dec_opt(my_option(A)) -> number().
-spec dec_opt2(my_option(A)) -> list(A).
-spec dec_opt3(my_option(fun((A) -> B)), A, A) -> list(B).
-spec dec_opt4(A, B, C) -> {A, B, C}.
