%% Copyright (c) Facebook, Inc. and its affiliates.
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%%     http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.

-module(unchecked).

-export([inferred_funs/0]).
-export([test2/0, test/0]).
-export([length/1, test1/0, xx/0, xx2/0]).
-export_type([t1/2, t2/2, x2/0]).

[opaque, unchecked]
-type t1(K, V) :: term().

[unchecked, opaque]
-type t2(K, V) :: term().

-type x1() :: t1(boolean(), boolean()).
-type x2() :: t2(x1(), x1()).

-spec length(list(_)) -> number().
[unchecked]
length(L) -> erlang:length(L).

lengths(Ls) ->
    [unchecked:length(L) || L <- Ls].

-spec test1() -> t1(number(), boolean()).
[unchecked]
test1() ->
    1.

-spec test2() -> unchecked:t1(boolean(), number()).
[unchecked]
test2() ->
    1.

-spec test() -> t1(number(), boolean()).
test() ->
    test1().

-spec xx() -> x2().
[unchecked]
xx() -> [].

-spec xx2() -> t2(x1(), x1()).
[unchecked]
xx2() -> [].

testme() ->
    [xx(), xx2()].

-spec inferred_funs() -> [term()].
[unchecked]
inferred_funs() -> [
    fun lengths/1,
    fun testme/0
].
