val test/1: fun((user()) -> user())
val X: user()
val mk_user/2: fun((string(), integer()) -> user())
val Name: string()
val Id: integer()
val update_user/3: fun((user(), string(), integer()) -> user())
val User: user()
val Name: string()
val Id: integer()
val get_id/1: fun((user()) -> integer())
val User: user()
val get_man_id/1: fun((manager()) -> integer())
val Manager: manager()
val check_user/1: fun((user()) -> ok())
val User: user()
val check_users/2: fun((user(), user()) -> ok())
val User1: user()
val User2: user()
val User1: user()
val User2: user()
val is_user/1: fun((user()) -> boolean())
val match_users/2: fun((user(), user()) -> boolean())
val Id: integer()
val Id: integer()
val foo/1: fun((manager()) -> user())
val User: user()
val mk_box_int/0: fun(() -> box(integer()))
val mk_box/1: fun((A) -> box(A))
val X: A
val mk_box2/1: fun((A) -> box2(A, A))
val X: A
val update_box/2: fun((box(A), A) -> box(A))
val B: box(A)
val X: A
val update_box2/2: fun((box2(A, A), A) -> box2(A, A))
val B: box2(A, A)
val X: A
val update_box2/3: fun((box2(B, A), A, B) -> box2(B, A))
val B: box2(B, A)
val Y: A
val X: B
val select_box2/1: fun((box2(integer(), integer())) -> integer())
val B: box2(integer(), integer())
val test_box2/1: fun((box2(A, A)) -> boolean())
val B: box2(A, A)
val pat_box2/1: fun((box2(A, A)) -> A)
val X: A
val X: A
val X: A
val Y: A
val mk_wrapped_int/0: fun(() -> wrapped_int())
