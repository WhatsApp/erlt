val b00/0: fun(() -> binary())
val b01/0: fun(() -> binary())
val b02/1: fun((integer()) -> binary())
val X: integer()
val b03/1: fun((integer()) -> binary())
val X: integer()
val b04/1: fun((float()) -> binary())
val X: float()
val b05/1: fun((binary()) -> binary())
val X: binary()
val b06/1: fun((binary()) -> binary())
val X: binary()
val b07/1: fun((bitstring()) -> binary())
val X: bitstring()
val b08/1: fun((bitstring()) -> binary())
val X: bitstring()
val b09/1: fun((integer()) -> binary())
val X: integer()
val b10/1: fun((integer()) -> binary())
val X: integer()
val b11/1: fun((integer()) -> binary())
val X: integer()
val b12/0: fun(() -> binary())
val b13/0: fun(() -> binary())
val b14/0: fun(() -> binary())
val b15/0: fun(() -> binary())
val b16/1: fun((binary()) -> boolean())
val b17/4: fun((binary(), binary(), binary(), integer()) -> boolean())
val X: integer()
val X: integer()
val b18/4: fun((binary(), binary(), integer(), binary()) -> boolean())
val X: integer()
val X: integer()
val b19/1: fun((binary()) -> {integer(), bitstring()})
val X: integer()
val Y: bitstring()
val b20/1: fun((binary()) -> {integer(), binary()})
val X: integer()
val Y: binary()
val b21/1: fun((binary()) -> {integer(), binary(), integer(), binary()})
val Size1: integer()
val Binary1: binary()
val Size2: integer()
val Binary2: binary()
val b22/1: fun((binary()) -> {integer(), integer(), integer()})
val UTF8: integer()
val UTF16: integer()
val UTF32: integer()
val b23/1: fun((binary()) -> {})
val b24/1: fun((binary()) -> {})
val X: integer()
val X: integer()
val b25/4: fun((binary(), integer(), binary(), integer()) -> boolean())
val Binary1: binary()
val Size1: integer()
val Binary2: binary()
val Size2: integer()
val Binary1: binary()
val Size1: integer()
val Binary2: binary()
val Size2: integer()
val b26/4: fun((binary(), integer(), binary(), integer()) -> boolean())
val Binary1: binary()
val Size1: integer()
val Binary2: binary()
val Size2: integer()
val b27/1: fun((binary()) -> binary())
val Binary: binary()
val X: integer()
val b28/1: fun((binary()) -> {float()})
val Float: float()
