-module(try_catch).

-export([t1/2, t2/1]).

-exception reason :: ().

[unchecked]
t1(F, Class) ->
    try
        F()
    catch
        ^Class, Reason, Stack -> {Reason, Stack};
        'exit', Reason, _ -> Reason;
        'error', _ -> 'error';
        'throw', Reason -> Reason
    end.

-spec t2(_F) -> string().
t2(_F) ->
    try
        "ok"
    catch
        #reason{} -> "ok"
    end.
