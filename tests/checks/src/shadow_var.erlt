%% Copyright (c) Facebook, Inc. and its affiliates.
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%%     http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.


-module(shadow_var).

%% Don't warn about normal shadowing in funs and comprehensions
-compile(nowarn_shadow_vars).

-export([f/2, g/2]).
-export([test1/2, test2/2, test3/2]).

-struct str :: (
    id :: any()
).

-enum ab(A, B) :: (
    a{a :: A},
    b{b :: B}
).

%% Error: bound variables without caret implies shadowing -
%% this is not allowed in normal patterns
f(X, Y) ->
    {'ok', Y} = X,
    case X of
        {'ok', Y} -> true;
        _ -> false
    end.

g(X, Y) ->
    %% List comprehension generators may shadow variables
    L = [X || {'foo', X} <- Y],
    %% Fun heads may shadow variables
    F = fun(X, Y) -> X + Y end,
    foldl(F, L, X).

test1(X, Y) ->
    case X of
        {Y} -> true
    end.

test2(X, Y) ->
    case X of
        #str{id = Y} -> true
    end.

test3(X, Y) ->
    case X of
        ab.a{a = Y} -> true
    end.

%% stub
foldl(_, Acc, _) -> Acc.

-spec f(_X, _Y) -> boolean().
-spec g(_X, [{A,B}]) -> [B].
-spec test1(_X, _Y) -> boolean().
-spec test2(_X, _Y) -> boolean().
-spec test3(_X, _Y) -> boolean().
