bad_types.erlt:19:16: The binary type is not supported by the type system
%   19| -type bin() :: <<_:1>>.
%     |                ^^^^^^^

bad_types.erlt:21:17: The binary type is not supported by the type system
%   21| -type bin2() :: <<>>.
%     |                 ^^^^

bad_types.erlt:23:18: The range type is not supported by the type system
%   23| -type range() :: 1..3.
%     |                  ^^^^

bad_types.erlt:25:18: Singleton types of type integer are not supported by the type system
%   25| -type s_int() :: 0.
%     |                  ^

bad_types.erlt:27:19: Singleton types of type atom are not supported by the type system
%   27| -type s_atom() :: 'hello'.
%     |                   ^^^^^^^

bad_types.erlt:29:19: Singleton types of type char are not supported by the type system
%   29| -type s_char() :: $a.
%     |                   ^^

bad_types.erlt:31:21: The map type is not supported by the type system
%   31| -type map_type() :: map().
%     |                     ^^^^^

bad_types.erlt:33:26: The map type is not supported by the type system
%   33| -type map_type2(A, B) :: #{A => B}.
%     |                          ^^^^^^^^^

bad_types.erlt:37:30: Funs with an undetermined number of arguments are not allowed by the type system
%   37| -type anon_fun_type() :: fun((...) -> integer()).
%     |                              ^^^^^^^^^^^^^^^^^^

bad_types.erlt:39:22: Non empty lists are not supported by the type system
%   39| -type non_empty() :: [integer(),...].
%     |                      ^^^^^^^^^^^^^^^

bad_types.erlt:41:18: Singleton types of type '[]' are not supported by the type system
%   41| -type empty() :: [].
%     |                  ^^

bad_types.erlt:43:19: The record type is not supported by the type system
%   43| -type record() :: #hello{}.
%     |                   ^^^^^^^^

bad_types.erlt:45:23: Variable size tuples are not supported by the type system
%   45| -type tuple_type() :: tuple().
%     |                       ^^^^^^^

bad_types.erlt:47:23: The union type is not supported by the type system
%   47| -type union_type() :: atom() | integer().
%     |                       ^^^^^^^^^^^^^^^^^^

bad_types.erlt:49:19: The type argument 'A' is not used in the definition
%   49| -type param_type1(A) :: integer().
%     |                   ^

bad_types.erlt:51:27: The type variable 'A' is undefined
%   51| -type unparam_type1() :: {A,A}.
%     |                           ^

bad_types.erlt:51:29: The type variable 'A' is undefined
%   51| -type unparam_type1() :: {A,A}.
%     |                             ^

bad_types.erlt:53:43: The type variable 'A' is undefined
%   53| -type bad_shape_type() :: #(id :: atom(), A).
%     |                                           ^

bad_types.erlt:56:14: _ is not a valid name for a type argument
%   56| -type badder(_) :: term().
%     |              ^

bad_types.erlt:58:17: The union type is not supported by the type system
%   57| 
%   58| -spec test() -> bin() | bin2() | range() | s_int() | s_atom() | map_type2(integer(), integer()) | fun_type() |
%     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
%   59|     anon_fun_type() | non_empty() | empty() | record() | badder(bad_shape_type()) |
%   60|     map_type() | tuple_type() | union_type() | param_type1(integer()) | unparam_type1().
%   61| test() -> {0,0}.

