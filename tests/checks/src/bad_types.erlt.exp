bad_types.erlt:5:16: The binary type is not supported by the type system
%    5| -type bin() :: <<_:1>>.
%     |                ^^^^^^^

bad_types.erlt:7:17: The binary type is not supported by the type system
%    7| -type bin2() :: <<>>.
%     |                 ^^^^

bad_types.erlt:9:18: The range type is not supported by the type system
%    9| -type range() :: 1..3.
%     |                  ^^^^

bad_types.erlt:11:18: Singleton types of type integer are not supported by the type system
%   11| -type s_int() :: 0.
%     |                  ^

bad_types.erlt:13:19: Singleton types of type atom are not supported by the type system
%   13| -type s_atom() :: 'hello'.
%     |                   ^^^^^^^

bad_types.erlt:15:19: Singleton types of type char are not supported by the type system
%   15| -type s_char() :: $a.
%     |                   ^^

bad_types.erlt:17:21: The map type is not supported by the type system
%   17| -type map_type() :: map().
%     |                     ^^^^^

bad_types.erlt:19:26: The map type is not supported by the type system
%   19| -type map_type2(A, B) :: #{A => B}.
%     |                          ^^^^^^^^^

bad_types.erlt:23:30: Funs with an undetermined number of arguments are not allowed by the type system
%   23| -type anon_fun_type() :: fun((...) -> integer()).
%     |                              ^^^^^^^^^^^^^^^^^^

bad_types.erlt:25:22: Non empty lists are not supported by the type system
%   25| -type non_empty() :: [integer(),...].
%     |                      ^^^^^^^^^^^^^^^

bad_types.erlt:27:18: Singleton types of type '[]' are not supported by the type system
%   27| -type empty() :: [].
%     |                  ^^

bad_types.erlt:29:19: The record type is not supported by the type system
%   29| -type record() :: #hello{}.
%     |                   ^^^^^^^^

bad_types.erlt:31:23: Variable size tuples are not supported by the type system
%   31| -type tuple_type() :: tuple().
%     |                       ^^^^^^^

bad_types.erlt:33:23: The union type is not supported by the type system
%   33| -type union_type() :: atom() | integer().
%     |                       ^^^^^^^^^^^^^^^^^^

bad_types.erlt:35:19: The type argument 'A' is not used in the definition
%   35| -type param_type1(A) :: integer().
%     |                   ^

bad_types.erlt:37:27: The type variable 'A' is undefined
%   37| -type unparam_type1() :: {A,A}.
%     |                           ^

bad_types.erlt:37:29: The type variable 'A' is undefined
%   37| -type unparam_type1() :: {A,A}.
%     |                             ^

bad_types.erlt:39:43: The type variable 'A' is undefined
%   39| -type bad_shape_type() :: #(id :: atom(), A).
%     |                                           ^

bad_types.erlt:42:14: _ is not a valid name for a type argument
%   42| -type badder(_) :: term().
%     |              ^

bad_types.erlt:44:17: The union type is not supported by the type system
%   43| 
%   44| -spec test() -> bin() | bin2() | range() | s_int() | s_atom() | map_type2(integer(), integer()) | fun_type() |
%     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
%   45|     anon_fun_type() | non_empty() | empty() | record() | badder(bad_shape_type()) |
%   46|     map_type() | tuple_type() | union_type() | param_type1(integer()) | unparam_type1().
%   47| test() -> {0,0}.

