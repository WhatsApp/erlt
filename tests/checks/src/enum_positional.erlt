%% Copyright (c) Facebook, Inc. and its affiliates.
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%%     http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.

-module(enum_positional).

-export([local/0]).

-export_type([enum/0, enum2/0]).

-enum invalid :: (variant{a :: integer(), float()}).

-enum enum :: (variant{float(), a :: integer()}).
-enum enum2 :: (variant{float(), a :: integer(), b :: float()}).

local() ->
    {
        enum.variant{1.0, a = 10},
        enum.variant{a = 10, 1.0},
        enum.variant{a = 10},
        enum.variant{1.0, 1.0, a = 10},
        enum2.variant{1.0, a = 1, b = 10},
        enum2.variant{1.0, a = 1, 10}
    }.

-spec local() -> {enum(), enum(), enum(), enum(), enum2(), enum2()}.
