%% Copyright (c) Facebook, Inc. and its affiliates.
%%
%% Licensed under the Apache License, Version 2.0 (the "License");
%% you may not use this file except in compliance with the License.
%% You may obtain a copy of the License at
%%
%%     http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS,
%% WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%% See the License for the specific language governing permissions and
%% limitations under the License.


-module(struct_fields).

-export([local/0, duplicate/1, another/1]).

-export_type([struct/0]).

-struct struct :: (a = 5 :: integer(), b :: float()).

-struct duplicate :: (a :: integer(), a :: integer()).

local() ->
    {
        #struct{},
        #struct{a = 10},
        #struct{b = 1.0, does_not_exist = 10},
        #struct{does_not_exist = _} = #struct{b = 1.0}
    }.

another(#struct{does_not_exist = Name}) -> Name.

duplicate(#struct{a = 1, a = 2, b = 3}) ->
    #struct{a = 1, a = 2, b = 3}.

-spec local() -> {struct(), struct(), struct(), struct()}.
-spec another(struct()) -> string().
-spec duplicate(struct()) -> struct().

%% we won't ever get remote definitons, since local check will fail above
%% and scan never produces output
% remote() ->
%     {
%         #struct{},
%         #struct{a = 10},
%         #struct{b = 1.0, does_not_exist = 10},
%         #struct{does_not_exist = _} = #struct{b = 1.0}
%     }.
