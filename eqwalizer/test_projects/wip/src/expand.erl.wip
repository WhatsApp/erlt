  1 -module(expand).                         | LOADED  |                                | 
  2                                          |         |                                | 
  3 -export([                                | LOADED  |                                | 
  4     mk_bin_tree/1,                       |         |                                | 
  5     mk_bin_tree_typo/1,                  |         |                                | 
  6     tuple_box/1,                         |         |                                | 
  7     fun_with_rec_constraints/0           |         |                                | 
  8 ]).                                      |         |                                | 
  9                                          |         |                                | 
 10 -type bin_tree() ::                      | LOADED  |                                | R: expand:bin_tree/0
 11       {leaf, atom()}                     |         |                                | 
 12     | {node, bin_tree(), bin_tree()}.    |         |                                | 
 13                                          |         |                                | 
 14 -type box(A) :: {box, A}.                | LOADED  |                                | 
 15                                          |         |                                | 
 16 -spec mk_bin_tree(atom()) -> bin_tree(). | LOADED  |                                | R: expand:bin_tree/0
 17 mk_bin_tree(A) -> {leaf, A}.             | LOADED  |                                | 
 18                                          |         |                                | 
 19 -spec mk_bin_tree_typo(atom())           | LOADED  |                                | U: types1:bin_tree_typo/0
 20     -> types1:bin_tree_typo().           |         |                                | 
 21 mk_bin_tree_typo(A) -> {leaf, A}.        | LOADED  |                                | 
 22                                          |         |                                | 
 23 -spec tuple_box(Tuple) -> TupleBox when  | LOADED  |                                | 
 24     Tuple :: {A, B}, TupleBox :: {box(A)……         |                                | 
 25 tuple_box({A, B}) -> {{box, A}, {box, B}…… LOADED  |                                | 
 26                                          |         |                                | 
 27 -spec fun_with_rec_constraints() ->      | LOADED  |                                | C: Rec
 28     Rec when Rec :: {rec, Rec}.          |         |                                | 
 29 fun_with_rec_constraints() ->            | LOADED  |                                | 
 30     {rec, fun_with_rec_constraints()}.   |         |                                | 
 31                                          |         |                                | 
 32 -record(rec_box, {box :: box(atom())}).  | LOADED  |                                | 
