  1 -module(types1).                         | LOADED  |                                | 
  2                                          |         |                                | 
  3 -compile([export_all, nowarn_export_all]……         |                                | 
  4                                          |         |                                | 
  5 -export_type([                           | LOADED  |                                | 
  6     my_opaque/0,                         |         |                                | 
  7     my_record/0,                         |         |                                | 
  8     my_pair/2,                           |         |                                | 
  9     my_any/0,                            |         |                                | 
 10     my_none/0,                           |         |                                | 
 11     my_pid/0,                            |         |                                | 
 12     my_port/0,                           |         |                                | 
 13     my_reference/0,                      |         |                                | 
 14     my_nil1/0,                           |         |                                | 
 15     my_nil2/0,                           |         |                                | 
 16     my_atom/0,                           |         |                                | 
 17     my_atom_literal/0,                   |         |                                | 
 18     my_bitstring1/0,                     |         |                                | 
 19     my_bitstring2/0,                     |         |                                | 
 20     my_bitstring3/0,                     |         |                                | 
 21     my_fun_any/0,                        |         |                                | 
 22     my_fun_any_arg/0,                    |         |                                | 
 23     my_fun/0,                            |         |                                | 
 24     my_float/0,                          |         |                                | 
 25     my_integer/0,                        |         |                                | 
 26     my_integer_literal/0,                |         |                                | 
 27     my_integer_range/0,                  |         |                                | 
 28     my_list/1,                           |         |                                | 
 29     my_nonempty_improper_list2/2,        |         |                                | 
 30     my_nonempty_list1/1,                 |         |                                | 
 31     my_tuple/0,                          |         |                                | 
 32     my_term/0,                           |         |                                | 
 33     my_binary/0,                         |         |                                | 
 34     my_bitstring/0,                      |         |                                | 
 35     my_boolean/0,                        |         |                                | 
 36     my_byte/0,                           |         |                                | 
 37     my_char/0,                           |         |                                | 
 38     my_nil/0,                            |         |                                | 
 39     my_number/0,                         |         |                                | 
 40     my_list/0,                           |         |                                | 
 41     my_maybe_improper_list0/0,           |         |                                | 
 42     my_maybe_improper_list2/2,           |         |                                | 
 43     my_nonempty_list0/0,                 |         |                                | 
 44     my_string/0,                         |         |                                | 
 45     my_nonempty_string/0,                |         |                                | 
 46     my_iodata/0,                         |         |                                | 
 47     my_iolist/0,                         |         |                                | 
 48     my_map/0,                            |         |                                | 
 49     my_function/0,                       |         |                                | 
 50     my_module/0,                         |         |                                | 
 51     my_mfa/0,                            |         |                                | 
 52     my_arity/0,                          |         |                                | 
 53     my_identifier/0,                     |         |                                | 
 54     my_node/0,                           |         |                                | 
 55     my_timeout/0,                        |         |                                | 
 56     my_no_return/0,                      |         |                                | 
 57     my_non_neg_integer/0,                |         |                                | 
 58     my_pos_integer/0,                    |         |                                | 
 59     my_neg_integer/0,                    |         |                                | 
 60     atom_or_number/0,                    |         |                                | 
 61     op_type1/0,                          |         |                                | 
 62     op_type2/0,                          |         |                                | 
 63     char_lit/0,                          |         |                                | 
 64     prop_map/0,                          |         |                                | 
 65     my_unary_fun/2,                      |         |                                | 
 66     my_boolean_unary_fun/0,              |         |                                | 
 67     my_booleans/0,                       |         |                                | 
 68     any_pair/0                           |         |                                | 
 69 ]).                                      |         |                                | 
 70                                          |         |                                | 
 71 -record(test_record, {}).                | LOADED  |                                | 
 72                                          |         |                                | 
 73 -opaque my_opaque() :: atom().           |         |                                | 
 74                                          |         |                                | 
 75 -type my_record() ::                     | LOADED  |                                | 
 76     #test_record{}.                      |         |                                | 
 77                                          |         |                                | 
 78 -type my_pair(A, B) ::                   | LOADED  |                                | 
 79     {A, B}.                              |         |                                | 
 80                                          |         |                                | 
 81 -type my_any() ::                        | LOADED  |                                | 
 82     any().                               |         |                                | 
 83                                          |         |                                | 
 84 -type my_none() ::                       | LOADED  |                                | 
 85     none().                              |         |                                | 
 86                                          |         |                                | 
 87 -type my_pid() ::                        | LOADED  |                                | 
 88     pid().                               |         |                                | 
 89                                          |         |                                | 
 90 -type my_port() ::                       | LOADED  |                                | 
 91     port().                              |         |                                | 
 92                                          |         |                                | 
 93 -type my_reference() ::                  | LOADED  |                                | 
 94     reference().                         |         |                                | 
 95                                          |         |                                | 
 96 -type my_nil1() ::                       | LOADED  |                                | 
 97     [].                                  |         |                                | 
 98                                          |         |                                | 
 99 -type my_nil2() ::                       | LOADED  |                                | 
100     nil().                               |         |                                | 
101                                          |         |                                | 
102 -type my_atom() ::                       | LOADED  |                                | 
103     atom().                              |         |                                | 
104                                          |         |                                | 
105 -type my_atom_literal() ::               | LOADED  |                                | 
106     ok.                                  |         |                                | 
107                                          |         |                                | 
108 -type my_bitstring1() ::                 | SKIPPED |                                | 
109     <<>>.                                |         | T: binary()                    | 
110                                          |         |                                | 
111 -type my_bitstring2() ::                 | SKIPPED |                                | 
112     <<_:2>>.                             |         | T: binary()                    | 
113                                          |         |                                | 
114 -type my_bitstring3() ::                 | SKIPPED |                                | 
115     <<_:_*2>>.                           |         | T: binary()                    | 
116                                          |         |                                | 
117 %%% functions                            |         |                                | 
118                                          |         |                                | 
119 -type my_fun_any() ::                    | SKIPPED |                                | 
120     fun().                               |         | T: fun()                       | 
121                                          |         |                                | 
122 -type my_fun_any_arg() ::                | SKIPPED |                                | 
123     fun((...) -> ok).                    |         | T: fun((...) -> Type)          | 
124                                          |         |                                | 
125 -type my_fun() ::                        | LOADED  |                                | 
126     fun((number()) -> number()).         |         |                                | 
127                                          |         |                                | 
128 %% NUMBERS                               |         |                                | 
129                                          |         |                                | 
130 -type my_float() ::                      | LOADED  |                                | 
131     float().                             |         |                                | 
132                                          |         |                                | 
133 -type my_integer() ::                    | LOADED  |                                | 
134     integer().                           |         |                                | 
135                                          |         |                                | 
136 -type my_integer_literal() ::            | LOADED  |                                | 
137     1.                                   |         |                                | 
138                                          |         |                                | 
139 -type my_integer_range() ::              | LOADED  |                                | 
140     [0..33].                             |         |                                | 
141                                          |         |                                | 
142 %% TODO - Ops                            |         |                                | 
143                                          |         |                                | 
144 -type my_list(A) ::                      | LOADED  |                                | 
145     list(A).                             |         |                                | 
146                                          |         |                                | 
147 -type                                    | SKIPPED |                                | 
148 my_maybe_improper_list2(T1, T2) ::       |         |                                | 
149     maybe_improper_list(T1, T2).         |         | T: maybe_improper_list()       | 
150                                          |         |                                | 
151 -type                                    | SKIPPED |                                | 
152 my_nonempty_improper_list2(T1, T2) ::    |         |                                | 
153     nonempty_improper_list(T1, T2).      |         | T: nonempty_improper_list()    | 
154                                          |         |                                | 
155 -type my_nonempty_list1(T) ::            | SKIPPED |                                | 
156     nonempty_list(T).                    |         | T: nonempty_list()             | 
157                                          |         |                                | 
158 -type my_tuple() ::                      | LOADED  |                                | 
159     tuple().                             |         |                                | 
160                                          |         |                                | 
161 %%%%%%%%                                 |         |                                | 
162                                          |         |                                | 
163 -type my_term() ::                       | LOADED  |                                | 
164     term().                              |         |                                | 
165                                          |         |                                | 
166 -type my_binary() ::                     | LOADED  |                                | 
167     binary().                            |         |                                | 
168                                          |         |                                | 
169 -type my_bitstring() ::                  | LOADED  |                                | 
170     binary().                            |         |                                | 
171                                          |         |                                | 
172 -type my_boolean() ::                    | LOADED  |                                | 
173     boolean().                           |         |                                | 
174                                          |         |                                | 
175 -type my_byte() ::                       | LOADED  |                                | 
176     byte().                              |         |                                | 
177                                          |         |                                | 
178 -type my_char()  ::                      | LOADED  |                                | 
179     char().                              |         |                                | 
180                                          |         |                                | 
181 -type my_nil() ::                        | LOADED  |                                | 
182     nil().                               |         |                                | 
183                                          |         |                                | 
184 -type my_number() ::                     | LOADED  |                                | 
185     number().                            |         |                                | 
186                                          |         |                                | 
187 -type my_list() ::                       | LOADED  |                                | 
188     list().                              |         |                                | 
189                                          |         |                                | 
190 -type my_maybe_improper_list0() ::       | SKIPPED |                                | 
191     maybe_improper_list().               |         | T: maybe_improper_list()       | 
192                                          |         |                                | 
193 -type my_nonempty_list0() ::             | SKIPPED |                                | 
194     nonempty_list().                     |         | T: nonempty_list()             | 
195                                          |         |                                | 
196 -type my_string() ::                     | SKIPPED |                                | 
197     string().                            |         | T: string()                    | 
198                                          |         |                                | 
199 -type my_nonempty_string() ::            | SKIPPED |                                | 
200     nonempty_string().                   |         | T: nonempty_string()           | 
201                                          |         |                                | 
202 -type my_iodata() ::                     | SKIPPED |                                | 
203     iodata().                            |         | T: iodata()                    | 
204                                          |         |                                | 
205 -type my_iolist() ::                     | SKIPPED |                                | 
206     iolist().                            |         | T: iolist()                    | 
207                                          |         |                                | 
208 -type my_map() ::                        | LOADED  |                                | 
209     map().                               |         |                                | 
210                                          |         |                                | 
211 -type my_function() ::                   | SKIPPED |                                | 
212     function().                          |         | T: function()                  | 
213                                          |         |                                | 
214 -type my_module() ::                     | LOADED  |                                | 
215     module().                            |         |                                | 
216                                          |         |                                | 
217 -type my_mfa() ::                        | LOADED  |                                | 
218     mfa().                               |         |                                | 
219                                          |         |                                | 
220 -type my_arity() ::                      | LOADED  |                                | 
221     arity().                             |         |                                | 
222                                          |         |                                | 
223 -type my_identifier() ::                 | LOADED  |                                | 
224     identifier().                        |         |                                | 
225                                          |         |                                | 
226 -type my_node() ::                       | LOADED  |                                | 
227     node().                              |         |                                | 
228                                          |         |                                | 
229 -type my_timeout() ::                    | LOADED  |                                | 
230     timeout().                           |         |                                | 
231                                          |         |                                | 
232 -type my_no_return() ::                  | LOADED  |                                | 
233     no_return().                         |         |                                | 
234                                          |         |                                | 
235 -type my_non_neg_integer() ::            | LOADED  |                                | 
236     non_neg_integer().                   |         |                                | 
237                                          |         |                                | 
238 -type my_pos_integer() ::                | LOADED  |                                | 
239     pos_integer().                       |         |                                | 
240                                          |         |                                | 
241 -type my_neg_integer() ::                | LOADED  |                                | 
242     neg_integer().                       |         |                                | 
243                                          |         |                                | 
244 %% the same logic for types in specs     |         |                                | 
245                                          |         |                                | 
246 -spec                                    | LOADED  |                                | 
247 number_id(number()) ->                   |         |                                | 
248           number().                      |         |                                | 
249 number_id(X) -> X.                       | LOADED  |                                | 
250                                          |         |                                | 
251 -spec                                    | LOADED  |                                | 
252 atom_id(Atom :: atom()) -> atom().       |         |                                | 
253 atom_id(A) -> A.                         | LOADED  |                                | 
254                                          |         |                                | 
255 -spec                                    | LOADED  |                                | 
256 record_id(#test_record{}) ->             |         |                                | 
257           #test_record{}.                |         |                                | 
258 record_id(X) -> X.                       | LOADED  |                                | 
259                                          |         |                                | 
260 -spec                                    | LOADED  |                                | 
261 my_number_id(my_number()) ->             |         |                                | 
262              my_number().                |         |                                | 
263 my_number_id(N) -> N.                    | LOADED  |                                | 
264                                          |         |                                | 
265 -type                                    | LOADED  |                                | 
266 atom_or_number() :: atom() | number().   |         |                                | 
267                                          |         |                                | 
268 -type op_type1() :: -1.                  | SKIPPED | T: - _                         | 
269 -type op_type2() :: 1 + 2.               | SKIPPED | T: _ + _                       | 
270                                          |         |                                | 
271 -type char_lit() :: $a.                  | LOADED  |                                | 
272                                          |         |                                | 
273 -type prop_map() ::                      | LOADED  |                                | 
274     #{a := number(), b => atom()}.       |         |                                | 
275                                          |         |                                | 
276 -type my_booleans() :: my_list(boolean()…… LOADED  |                                | 
277                                          |         |                                | 
278 -type my_unary_fun(A, B) ::              | LOADED  |                                | 
279     fun((A) -> B).                       |         |                                | 
280 -type my_boolean_unary_fun() ::          | LOADED  |                                | 
281     my_unary_fun(boolean(), boolean()).  |         |                                | 
282                                          |         |                                | 
283 -spec atom_list_id(AList) -> AList when …… LOADED  |                                | 
284 atom_list_id(AList) -> AList.            | LOADED  |                                | 
285                                          |         |                                | 
286 -type any_pair() :: {_, _}.              | LOADED  |                                | 
287                                          |         |                                | 
288 -spec inter                              | SKIPPED | Intersection                   | 
289     (ok) -> nok;                         |         |                                | 
290     (nok) -> ok.                         |         |                                | 
291 inter(ok) -> nok;                        | LOADED  |                                | 
292 inter(nok) -> ok.                        |         |                                | 
293                                          |         |                                | 
294 -type bad_map1() :: #{                   | SKIPPED |                                | 
295     atom() => atom(),                    |         | Bad map key                    | 
296     integer() => integer()               |         |                                | 
297 }.                                       |         |                                | 
298                                          |         |                                | 
299 -type bad_map2() :: #{                   | SKIPPED |                                | 
300     atom() := atom(),                    |         | Bad map key                    | 
301     integer() := integer()               |         |                                | 
302 }.                                       |         |                                | 
303                                          |         |                                | 
304 -type empty_map() :: #{}.                | LOADED  |                                | 
305                                          |         |                                | 
306 -type int_dict() ::                      | LOADED  |                                | 
307     #{integer() => integer()}.           |         |                                | 
308                                          |         |                                | 
309 -type single_shape1() ::                 | LOADED  |                                | 
310     #{id => integer()}.                  |         |                                | 
311 -type single_shape2() ::                 | LOADED  |                                | 
312     #{id := integer()}.                  |         |                                | 
